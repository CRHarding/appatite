\c appatite_db;

DROP TABLE IF EXISTS users cascade;
DROP TABLE IF EXISTS friends cascade;
DROP TABLE IF EXISTS restaurants cascade;
DROP TABLE IF EXISTS favorites cascade;
DROP TABLE IF EXISTS reviews cascade;
DROP TABLE IF EXISTS reactions;

CREATE TABLE users (
  id SERIAL PRIMARY KEY,
  fname VARCHAR(255),
  lname VARCHAR(255),
  username VARCHAR(255) UNIQUE,
  password VARCHAR(255),
  about_me VARCHAR(255),
  auth INTEGER DEFAULT 1,
  loc VARCHAR(255),
  date_created TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE restaurants (
  id SERIAL PRIMARY KEY,
  name VARCHAR(255) UNIQUE,
  rating INTEGER DEFAULT 0,
  cuisine VARCHAR(255),
  img_src VARCHAR(255),
  loc VARCHAR(255),
  date_created TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE friends (
  id SERIAL PRIMARY KEY,
  user_id VARCHAR(255) REFERENCES users(username) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL,
  friend_name VARCHAR(255) REFERENCES users(username) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL,
  date_created TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE favorites (
  id SERIAL PRIMARY KEY,
  user_id VARCHAR(255) REFERENCES users(username) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL,
  restaurant_name VARCHAR(255) REFERENCES restaurants(name) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL
);

CREATE TABLE reviews (
  id SERIAL PRIMARY KEY,
  user_id VARCHAR(255) REFERENCES users(username) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL,
  restaurant_name VARCHAR(255) REFERENCES restaurants(name) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL,
  content VARCHAR(700),
  date_created TIMESTAMP NOT NULL DEFAULT NOW()
);

CREATE TABLE reaction (
  id SERIAL PRIMARY KEY,
  user_id VARCHAR(255) REFERENCES users(username) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL,
  restaurant_name VARCHAR(255) REFERENCES restaurants(name) ON UPDATE CASCADE ON DELETE CASCADE NOT NULL,
  reaction_src VARCHAR(255)
);

CREATE INDEX ON users (username);
CREATE INDEX ON restaurants (name);
